cmake_minimum_required (VERSION 3.10)
project (gPb)

cmake_policy(SET CMP0020 NEW)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTORCC ON)

find_package(Qt5Core REQUIRED)
find_package(OpenCV 3.4.3 REQUIRED COMPONENTS core imgproc highgui imgcodecs)

if(OpenCV_FOUND)
   message("Found OpenCV")
   message("Includes: " ${OpenCV_INCLUDE_DIRS})
   message("Libs " ${OpenCV_LIBS})
else(OpenCV_FOUND)
	message("OpenCV not found" FATAL)
endif(OpenCV_FOUND)

SET(CMAKE_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})

add_subdirectory(cpuPb)
add_subdirectory(TextonGenerator)
add_subdirectory(common)
add_subdirectory(cudaPb)
add_subdirectory(testMPb)
add_subdirectory(mPb)
add_subdirectory(MPbGUI)

set(QT_ROOT_PATH ${Qt5Core_DIR}/../../../)
set(OPENCV_ROOT_PATH ${OpenCV_DIR}/../)

if (NOT UNIX)
	install(FILES ${QT_ROOT_PATH}/bin/Qt5Core.dll DESTINATION bin)
	install(FILES ${QT_ROOT_PATH}/bin/Qt5Gui.dll DESTINATION bin)
	install(FILES ${QT_ROOT_PATH}/bin/Qt5Widgets.dll DESTINATION bin)
	install(FILES ${QT_ROOT_PATH}/plugins/platforms/qwindows.dll DESTINATION bin/platforms)
	install(FILES ${OPENCV_ROOT_PATH}/bin/opencv_core343.dll DESTINATION bin)
	install(FILES ${OPENCV_ROOT_PATH}/bin/opencv_imgcodecs343.dll DESTINATION bin)
	install(FILES ${OPENCV_ROOT_PATH}/bin/opencv_imgproc343.dll DESTINATION bin)
endif (NOT UNIX)